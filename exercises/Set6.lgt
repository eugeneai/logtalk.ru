% Мир кубиков.

% -----------------------------------------------------
% Упражнение 1: Протокол решения задач (problem solving)
% Необходимо задачть протокол protected-методов для определения
% допустимых переходов состояний after/2, и распознавания
% целевых состояний goal_state/1 (goal - стандартный
% встроенный предикат, его мы использовать не можем).
% протокол назоаем ssg_p (state space graph).

:- protocol(ssg_p).
   :- protected(after/2).
   :- protected(goal_state/1).
:- end_protocol.

% Второй протокол - протокол метода решения - solution_p.
% Протокол содержит один згидшс-метод solution/2, первый
% аргумент насальное состояние, второй - путь до одного
% из целевых.

:- protocol(solution_p).
   :- public(solution/2).
:- end_protocol.

% -----------------------------------------------------
% Упражнение 2: Управжнения будут представлять различные
% стратегии и методы поиска решения - путь из начальной
% вершины в одну из целевых. Путь с различными свойствами.

% Данная категория реализует простейший поиск в глубину,
% реализует solution_p.

:- category(depth_first,
   implements(solution_p)).

   % Если исходная вершина и есть целевая, никуда ни надо ходить.
   solution(X, []) :-
     ::goal_state(X).
   % Если исходная вершина не является целевой, то
   % сделать шаг в новую вершину, построить решающий
   % путь из новой вершины.
   solution(X, [X-Y|T]) :-
     \+ ::goal_state(X),
     ::after(X, Y).

:- end_category.

% -----------------------------------------------------
% Упражнение 3: Задайте объект со структурой лабиринта
% labyrinth. after/2 задает переходы между комнтатами.
% goal_state/1 задает одину целевую вершину.

:- object(labyrinth).

:- end_object.
